<?php

namespace App\Model\News\Comments;

use App\Model\News\Comments\Voting\Voting;
use App\Model\News\Comments\Voting\VotingFactory;
use App\Model\User\User;
use App\Model\User\UserFactory;
use System\App\Model\AbstractFactoryChildModel;

class Comment extends AbstractFactoryChildModel {

	/**
	 * @return User
	 */
	public function getAuthor(): User {

        /**
         * @var $userFactory UserFactory
         */
		$userFactory = $this->getFactoryManager()->get(UserFactory::class);
        /**
         * @var $user User
         */
        $user = $userFactory->getById($this->getInt("user_id"));

		return $user;
	}

    /**
     * @param User $user
     * @return Voting|null
     * @throws \Exception
     */
	public function getVoteByUser(User $user): ?Voting {

        /**
         * @var $votingFactory VotingFactory
         */
		$votingFactory = $this->getFactoryManager()->get(VotingFactory::class);

		return $votingFactory->getByCommentAndUser($this, $user);
	}

	/**
	 * @return int
	 */
	public function getLikesCount(): int {

        /**
         * @var $votingFactory VotingFactory
         */
		$votingFactory = $this->getFactoryManager()->get(VotingFactory::class);

		return $votingFactory->getLikeCountByComment($this);
	}

	/**
	 * @return int
	 */
	public function getDislikesCount(): int {

        /**
         * @var $votingFactory VotingFactory
         */
		$votingFactory = $this->getFactoryManager()->get(VotingFactory::class);

		return $votingFactory->getDislikeCountByComment($this);
	}

    /**
     * @return Voting[]
     * @throws \Exception
     */
	public function getVotes(): array {

        /**
         * @var $votingFactory VotingFactory
         */
		$votingFactory = $this->getFactoryManager()->get(VotingFactory::class);

		return $votingFactory->getAllByComment($this);
	}

    /**
     * @return bool
     * @throws \Exception
     */
	public function delete(): bool {

		foreach ($this->getVotes() as $vote) {
			$vote->delete();
		}

		return parent::delete(); // TODO: Change the autogenerated stub
	}
}